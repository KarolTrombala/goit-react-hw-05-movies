{"version":3,"file":"static/js/310.e65193b9.chunk.js","mappings":"yQAEaA,E,OAAiBC,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0J,SCkDvC,EA/Ce,WAAO,IAADC,EACjBC,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,GAAWC,EAAAA,EAAAA,MAEXC,EAAsC,QAA5Bd,EAAGU,EAAaK,IAAI,gBAAQ,IAAAf,EAAAA,EAAI,IAEhDgB,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAc,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,GACQC,EAAAA,EAAAA,IAAqBZ,GAAW,OAArDQ,EAAYC,EAAAI,KAClBrB,EAAUgB,GAAa,wBAAAC,EAAAK,OAAA,GAAAP,EAAA,KAC1B,kBAHmB,OAAAH,EAAAW,MAAA,KAAAC,UAAA,KAIpBb,GACJ,GAAG,CAACH,IASJ,OACIiB,EAAAA,EAAAA,MAAA,QAAAC,SAAA,EACID,EAAAA,EAAAA,MAAA,QAAME,SATO,SAACC,GAClBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACf1B,EAAgB,CAAE2B,MAAOF,EAAKG,SAASD,MAAME,QAC7CJ,EAAKK,OACT,EAIqCT,SAAA,EACzBU,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOC,KAAK,WACxBF,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAQX,SAAC,cAEzB3B,EAAOwC,OAAS,GACbH,EAAAA,EAAAA,KAAA,MAAAV,SACK3B,EAAOyC,KAAI,SAACC,GAAK,OACdL,EAAAA,EAAAA,KAAA,MAAAV,UACIU,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,GAAE,GAAAC,OAAKH,EAAMI,IAAMC,MAAO,CAAEC,KAAMzC,GAAWoB,UAC/CU,EAAAA,EAAAA,KAAC9C,EAAc,CAAAoC,SACVe,EAAMO,WAHVP,EAAMI,GAMV,MAIb,KAIhB,C","sources":["pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MoviesListItem = styled.ul`\n    list-style-type: none;\n    margin: 15px 0;\n    text-decoration: none;\n    color: black;\n\n    &:hover {\n        color: orange;\n    }\n`\n","import { Link, useLocation, useSearchParams } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\nimport { fetchMoviesWithQuery } from '../../services/api'\nimport { MoviesListItem } from './Movies.styled'\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([])\n    const [searchParams, setSearchParams] = useSearchParams()\n    const location = useLocation()\n\n    const movieTitle = searchParams.get('query') ?? ''\n\n    useEffect(() => {\n        const searchedMovies = async () => {\n            const listOfMovies = await fetchMoviesWithQuery(movieTitle)\n            setMovies(listOfMovies)\n        }\n        searchedMovies()\n    }, [movieTitle])\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        const form = e.currentTarget\n        setSearchParams({ query: form.elements.query.value })\n        form.reset()\n    }\n\n    return (\n        <main>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" name=\"query\" />\n                <button type=\"submit\">Search</button>\n            </form>\n            {movies.length > 0 ? (\n                <ul>\n                    {movies.map((movie) => (\n                        <li key={movie.id}>\n                            <Link to={`${movie.id}`} state={{ from: location }}>\n                                <MoviesListItem>\n                                    {movie.title}\n                                </MoviesListItem>\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n            ) : (\n                ''\n            )}\n        </main>\n    )\n};\n\nexport default Movies;\n"],"names":["MoviesListItem","styled","_templateObject","_taggedTemplateLiteral","_searchParams$get","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","location","useLocation","movieTitle","get","useEffect","searchedMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","listOfMovies","_context","prev","next","fetchMoviesWithQuery","sent","stop","apply","arguments","_jsxs","children","onSubmit","e","preventDefault","form","currentTarget","query","elements","value","reset","_jsx","type","name","length","map","movie","Link","to","concat","id","state","from","title"],"sourceRoot":""}